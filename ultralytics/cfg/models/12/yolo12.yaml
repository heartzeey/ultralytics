# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# YOLO12 object detection model with P3/8 - P5/32 outputs
# Model docs: https://docs.ultralytics.com/models/yolo12
# Task docs: https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants
  n: [0.70, 0.35, 1024] #
  s: [0.70, 0.70, 1024] #
  m: [0.70, 1.20, 768] 
  l: [1.20, 1.20, 768]
  x: [1.20, 1.70, 768]

# YOLO12n backbone with CBAM attention
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]         # 0-P1/2
  - [-1, 1, CBAM, [64]]               # CBAM after P1
  - [-1, 1, Conv, [128, 3, 2]]        # 1-P2/4
  - [-1, 1, CBAM, [128]]              # CBAM after P2
  - [-1, 2, C3k2, [256, False, 0.25]] # 2
  - [-1, 1, CBAM, [256]]              # CBAM after C3k2
  - [-1, 1, Conv, [256, 3, 2]]        # 3-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]] # 4
  - [-1, 1, CBAM, [512]]              # CBAM after C3k2
  - [-1, 1, Conv, [512, 3, 2]]        # 5-P4/16
  - [-1, 4, A2C2f, [512, True, 4]]    # 6
  - [-1, 1, CBAM, [512]]              # CBAM after A2C2f
  - [-1, 1, Conv, [1024, 3, 2]]       # 7-P5/32
  - [-1, 4, A2C2f, [1024, True, 1]]   # 8
  - [-1, 1, CBAM, [1024]]             # CBAM after last backbone stage

# YOLO12n neck with CBAM in the upsampling path
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 6], 1, Concat, [1]] # cat backbone P4
  - [-1, 1, CBAM, [512]]      # CBAM after concat P4
  - [-1, 2, A2C2f, [512, False, -1]] # 11

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3
  - [-1, 1, CBAM, [256]]      # CBAM after concat P3
  - [-1, 2, A2C2f, [256, False, -1]] # 14

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 11], 1, Concat, [1]] # cat head P4
  - [-1, 1, CBAM, [512]]       # CBAM after concat P4
  - [-1, 2, A2C2f, [512, False, -1]] # 17

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 8], 1, Concat, [1]]  # cat head P5
  - [-1, 1, CBAM, [1024]]      # CBAM after concat P5
  - [-1, 2, C3k2, [1024, True]] # 20 (P5/32-large)

  - [[14, 17, 20], 1, Detect, [nc]] # Detect(P3, P4, P5)
